plugins {
    id 'java'
}


version '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}"
    compile group: 'javax.validation', name: 'validation-api', version: "${javaxValidationVersion}"
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: "${jacksonDatabindYamlVersion}"

    compile group: 'javax.validation', name: 'validation-api', version: "${javaxValidationVersion}"
    compile group: 'org.hibernate', name: 'hibernate-validator', version: "${hibernateValidatorVersion}"

    implementation "jakarta.xml.bind:jakarta.xml.bind-api:${jakartaVersion}"
    implementation "org.glassfish.jaxb:jaxb-runtime:${glassfishVersion}"
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
//    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.5.0'

    // ------------ Necessary utilities ------------
    compile group: 'org.javatuples', name: 'javatuples', version: "${javaTuplesVersion}"
    compile group: 'org.jooq', name: 'jool', version: '0.9.14'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.2'

    // ------------ Micronaut framework ------------
    //    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautBomVersion")
    //    annotationProcessor "io.micronaut:micronaut-inject-java"
    //    annotationProcessor "io.micronaut:micronaut-validation"
    //    implementation platform("io.micronaut:micronaut-bom:$micronautBomVersion")
    //    implementation "io.micronaut:micronaut-http-client"
    //    implementation "io.micronaut:micronaut-inject"
    //    implementation "io.micronaut:micronaut-validation"
    //    implementation "io.micronaut:micronaut-runtime"
    //    implementation "io.micronaut:micronaut-http-server-netty"
    //    implementation "javax.annotation:javax.annotation-api"
    //    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"
    //    compile group: 'io.micronaut.data', name: 'micronaut-data-model', version: "${micronautDataModelVersion}"
    //    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautBomVersion")
    //    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    //    testImplementation platform("io.micronaut:micronaut-bom:$micronautBomVersion")
    //    testImplementation "org.junit.jupiter:junit-jupiter-api"
    //    testImplementation "io.micronaut.test:micronaut-test-junit5"
    //    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    //    implementation "io.micronaut:micronaut-security-jwt:$micronautJwtVersion"
    //    compile "io.micronaut:micronaut-management"
    //    implementation "io.micronaut.configuration:micronaut-kafka"
//    implementation "io.micronaut.configuration:micronaut-kafka-streams:$micronautKafkaStreamsVersion"

    testCompile "io.micronaut.test:micronaut-test-junit5:1.1.5"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
}
test {
    useJUnitPlatform()
    maxHeapSize = '1G'
}