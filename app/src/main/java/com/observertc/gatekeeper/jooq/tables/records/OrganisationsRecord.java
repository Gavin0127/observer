/*
 * This file is generated by jOOQ.
 */
package com.observertc.gatekeeper.jooq.tables.records;


import com.observertc.gatekeeper.jooq.tables.Organisations;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Organizations
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganisationsRecord extends UpdatableRecordImpl<OrganisationsRecord> implements Record4<Integer, byte[], String, String> {

    private static final long serialVersionUID = 184519945;

    /**
     * Setter for <code>ObserveRTC.Organisations.id</code>. The identifier of the organization for inside relations, never outside
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ObserveRTC.Organisations.id</code>. The identifier of the organization for inside relations, never outside
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ObserveRTC.Organisations.uuid</code>. The UUID of the organization published outside 
     */
    public void setUuid(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>ObserveRTC.Organisations.uuid</code>. The UUID of the organization published outside 
     */
    public byte[] getUuid() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>ObserveRTC.Organisations.name</code>. The name of the organization
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ObserveRTC.Organisations.name</code>. The name of the organization
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ObserveRTC.Organisations.description</code>. The description for the organization
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ObserveRTC.Organisations.description</code>. The description for the organization
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, byte[], String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, byte[], String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Organisations.ORGANISATIONS.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return Organisations.ORGANISATIONS.UUID;
    }

    @Override
    public Field<String> field3() {
        return Organisations.ORGANISATIONS.NAME;
    }

    @Override
    public Field<String> field4() {
        return Organisations.ORGANISATIONS.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getUuid();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getUuid();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public OrganisationsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OrganisationsRecord value2(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public OrganisationsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public OrganisationsRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public OrganisationsRecord values(Integer value1, byte[] value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrganisationsRecord
     */
    public OrganisationsRecord() {
        super(Organisations.ORGANISATIONS);
    }

    /**
     * Create a detached, initialised OrganisationsRecord
     */
    public OrganisationsRecord(Integer id, byte[] uuid, String name, String description) {
        super(Organisations.ORGANISATIONS);

        set(0, id);
        set(1, uuid);
        set(2, name);
        set(3, description);
    }
}
