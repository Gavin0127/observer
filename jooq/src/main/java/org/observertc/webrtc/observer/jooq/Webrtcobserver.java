/*
 * This file is generated by jOOQ.
 */
package org.observertc.webrtc.observer.jooq;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import org.observertc.webrtc.observer.jooq.tables.Activestreams;
import org.observertc.webrtc.observer.jooq.tables.Observers;
import org.observertc.webrtc.observer.jooq.tables.Peerconnections;
import org.observertc.webrtc.observer.jooq.tables.Sentreports;
import org.observertc.webrtc.observer.jooq.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Webrtcobserver extends SchemaImpl {

    private static final long serialVersionUID = 1902283968;

    /**
     * The reference instance of <code>WebRTCObserver</code>
     */
    public static final Webrtcobserver WEBRTCOBSERVER = new Webrtcobserver();

    /**
     * A table to track the active streams
     */
    public final Activestreams ACTIVESTREAMS = Activestreams.ACTIVESTREAMS;

    /**
     * Observers
     */
    public final Observers OBSERVERS = Observers.OBSERVERS;

    /**
     * A table to store peer connection reports generated by the service
     */
    public final Peerconnections PEERCONNECTIONS = Peerconnections.PEERCONNECTIONS;

    /**
     * SentReports
     */
    public final Sentreports SENTREPORTS = Sentreports.SENTREPORTS;

    /**
     * Users
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Webrtcobserver() {
        super("WebRTCObserver", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Activestreams.ACTIVESTREAMS,
            Observers.OBSERVERS,
            Peerconnections.PEERCONNECTIONS,
            Sentreports.SENTREPORTS,
            Users.USERS);
    }
}
