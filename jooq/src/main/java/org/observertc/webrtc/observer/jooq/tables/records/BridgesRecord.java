/*
 * Copyright  2020 Balazs Kreith
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package org.observertc.webrtc.observer.jooq.tables.records;


import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.observertc.webrtc.observer.jooq.tables.Bridges;


/**
 * Services
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BridgesRecord extends UpdatableRecordImpl<BridgesRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 1003240409;

    /**
     * Setter for <code>WebRTCObserver.Bridges.id</code>.
     */
    public BridgesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Bridges.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>WebRTCObserver.Bridges.service_id</code>.
     */
    public BridgesRecord setServiceId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Bridges.service_id</code>.
     */
    @NotNull
    public Integer getServiceId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>WebRTCObserver.Bridges.name</code>.
     */
    public BridgesRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Bridges.name</code>.
     */
    @Size(max = 255)
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>WebRTCObserver.Bridges.description</code>.
     */
    public BridgesRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Bridges.description</code>.
     */
    @Size(max = 255)
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Bridges.BRIDGES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Bridges.BRIDGES.SERVICE_ID;
    }

    @Override
    public Field<String> field3() {
        return Bridges.BRIDGES.NAME;
    }

    @Override
    public Field<String> field4() {
        return Bridges.BRIDGES.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getServiceId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getServiceId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public BridgesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BridgesRecord value2(Integer value) {
        setServiceId(value);
        return this;
    }

    @Override
    public BridgesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public BridgesRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public BridgesRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BridgesRecord
     */
    public BridgesRecord() {
        super(Bridges.BRIDGES);
    }

    /**
     * Create a detached, initialised BridgesRecord
     */
    public BridgesRecord(Integer id, Integer serviceId, String name, String description) {
        super(Bridges.BRIDGES);

        set(0, id);
        set(1, serviceId);
        set(2, name);
        set(3, description);
    }
}
