/*
 * This file is generated by jOOQ.
 */
package org.observertc.webrtc.observer.jooq;


import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.observertc.webrtc.observer.jooq.tables.Activestreams;
import org.observertc.webrtc.observer.jooq.tables.Peerconnections;
import org.observertc.webrtc.observer.jooq.tables.records.ActivestreamsRecord;
import org.observertc.webrtc.observer.jooq.tables.records.PeerconnectionsRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>WebRTCObserver</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ActivestreamsRecord> KEY_ACTIVESTREAMS_PRIMARY = UniqueKeys0.KEY_ACTIVESTREAMS_PRIMARY;
    public static final UniqueKey<PeerconnectionsRecord> KEY_PEERCONNECTIONS_PRIMARY = UniqueKeys0.KEY_PEERCONNECTIONS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<ActivestreamsRecord> KEY_ACTIVESTREAMS_PRIMARY = Internal.createUniqueKey(Activestreams.ACTIVESTREAMS, "KEY_ActiveStreams_PRIMARY", new TableField[] { Activestreams.ACTIVESTREAMS.SERVICEUUID, Activestreams.ACTIVESTREAMS.SSRC }, true);
        public static final UniqueKey<PeerconnectionsRecord> KEY_PEERCONNECTIONS_PRIMARY = Internal.createUniqueKey(Peerconnections.PEERCONNECTIONS, "KEY_PeerConnections_PRIMARY", new TableField[] { Peerconnections.PEERCONNECTIONS.PEERCONNECTIONUUID }, true);
    }
}
