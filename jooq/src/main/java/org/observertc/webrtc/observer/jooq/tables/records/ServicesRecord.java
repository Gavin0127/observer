/*
 * This file is generated by jOOQ.
 */
package org.observertc.webrtc.observer.jooq.tables.records;


import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.observertc.webrtc.observer.jooq.tables.Services;


/**
 * Services
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServicesRecord extends UpdatableRecordImpl<ServicesRecord> implements Record5<Integer, Integer, byte[], String, String> {

    private static final long serialVersionUID = 493493666;

    /**
     * Setter for <code>WebRTCObserver.Services.id</code>.
     */
    public ServicesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Services.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>WebRTCObserver.Services.customer_id</code>.
     */
    public ServicesRecord setCustomerId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Services.customer_id</code>.
     */
    @NotNull
    public Integer getCustomerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>WebRTCObserver.Services.uuid</code>.
     */
    public ServicesRecord setUuid(byte[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Services.uuid</code>.
     */
    @Size(max = 16)
    public byte[] getUuid() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>WebRTCObserver.Services.name</code>.
     */
    public ServicesRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Services.name</code>.
     */
    @Size(max = 255)
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>WebRTCObserver.Services.description</code>.
     */
    public ServicesRecord setDescription(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.Services.description</code>.
     */
    @Size(max = 255)
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, byte[], String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, byte[], String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Services.SERVICES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Services.SERVICES.CUSTOMER_ID;
    }

    @Override
    public Field<byte[]> field3() {
        return Services.SERVICES.UUID;
    }

    @Override
    public Field<String> field4() {
        return Services.SERVICES.NAME;
    }

    @Override
    public Field<String> field5() {
        return Services.SERVICES.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCustomerId();
    }

    @Override
    public byte[] component3() {
        return getUuid();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCustomerId();
    }

    @Override
    public byte[] value3() {
        return getUuid();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public ServicesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ServicesRecord value2(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public ServicesRecord value3(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public ServicesRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public ServicesRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ServicesRecord values(Integer value1, Integer value2, byte[] value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServicesRecord
     */
    public ServicesRecord() {
        super(Services.SERVICES);
    }

    /**
     * Create a detached, initialised ServicesRecord
     */
    public ServicesRecord(Integer id, Integer customerId, byte[] uuid, String name, String description) {
        super(Services.SERVICES);

        set(0, id);
        set(1, customerId);
        set(2, uuid);
        set(3, name);
        set(4, description);
    }
}
