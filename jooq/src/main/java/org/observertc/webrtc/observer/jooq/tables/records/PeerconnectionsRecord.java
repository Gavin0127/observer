/*
 * This file is generated by jOOQ.
 */
package org.observertc.webrtc.observer.jooq.tables.records;


import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.observertc.webrtc.observer.jooq.tables.Peerconnections;


/**
 * A table to store peer connection reports generated by the service
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeerconnectionsRecord extends UpdatableRecordImpl<PeerconnectionsRecord> implements Record8<byte[], LocalDateTime, LocalDateTime, LocalDateTime, String, String, byte[], byte[]> {

    private static final long serialVersionUID = 575457165;

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.peerConnectionUUID</code>. The UUID of the peer connection
     */
    public PeerconnectionsRecord setPeerconnectionuuid(byte[] value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.peerConnectionUUID</code>. The UUID of the peer connection
     */
    @NotNull
    @Size(max = 16)
    public byte[] getPeerconnectionuuid() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.joined</code>.
     */
    public PeerconnectionsRecord setJoined(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.joined</code>.
     */
    public LocalDateTime getJoined() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.updated</code>.
     */
    public PeerconnectionsRecord setUpdated(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.detached</code>.
     */
    public PeerconnectionsRecord setDetached(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.detached</code>.
     */
    public LocalDateTime getDetached() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.browserID</code>.
     */
    public PeerconnectionsRecord setBrowserid(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.browserID</code>.
     */
    @Size(max = 64)
    public String getBrowserid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.timeZone</code>.
     */
    public PeerconnectionsRecord setTimezone(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.timeZone</code>.
     */
    @Size(max = 64)
    public String getTimezone() {
        return (String) get(5);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.callUUID</code>. The UUID of the call the peer connection belongs to
     */
    public PeerconnectionsRecord setCalluuid(byte[] value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.callUUID</code>. The UUID of the call the peer connection belongs to
     */
    @NotNull
    @Size(max = 16)
    public byte[] getCalluuid() {
        return (byte[]) get(6);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.observerUUID</code>. The UUID of the observer reported the peer connection
     */
    public PeerconnectionsRecord setObserveruuid(byte[] value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.observerUUID</code>. The UUID of the observer reported the peer connection
     */
    @NotNull
    @Size(max = 16)
    public byte[] getObserveruuid() {
        return (byte[]) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<byte[]> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<byte[], LocalDateTime, LocalDateTime, LocalDateTime, String, String, byte[], byte[]> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<byte[], LocalDateTime, LocalDateTime, LocalDateTime, String, String, byte[], byte[]> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<byte[]> field1() {
        return Peerconnections.PEERCONNECTIONS.PEERCONNECTIONUUID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Peerconnections.PEERCONNECTIONS.JOINED;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Peerconnections.PEERCONNECTIONS.UPDATED;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Peerconnections.PEERCONNECTIONS.DETACHED;
    }

    @Override
    public Field<String> field5() {
        return Peerconnections.PEERCONNECTIONS.BROWSERID;
    }

    @Override
    public Field<String> field6() {
        return Peerconnections.PEERCONNECTIONS.TIMEZONE;
    }

    @Override
    public Field<byte[]> field7() {
        return Peerconnections.PEERCONNECTIONS.CALLUUID;
    }

    @Override
    public Field<byte[]> field8() {
        return Peerconnections.PEERCONNECTIONS.OBSERVERUUID;
    }

    @Override
    public byte[] component1() {
        return getPeerconnectionuuid();
    }

    @Override
    public LocalDateTime component2() {
        return getJoined();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdated();
    }

    @Override
    public LocalDateTime component4() {
        return getDetached();
    }

    @Override
    public String component5() {
        return getBrowserid();
    }

    @Override
    public String component6() {
        return getTimezone();
    }

    @Override
    public byte[] component7() {
        return getCalluuid();
    }

    @Override
    public byte[] component8() {
        return getObserveruuid();
    }

    @Override
    public byte[] value1() {
        return getPeerconnectionuuid();
    }

    @Override
    public LocalDateTime value2() {
        return getJoined();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdated();
    }

    @Override
    public LocalDateTime value4() {
        return getDetached();
    }

    @Override
    public String value5() {
        return getBrowserid();
    }

    @Override
    public String value6() {
        return getTimezone();
    }

    @Override
    public byte[] value7() {
        return getCalluuid();
    }

    @Override
    public byte[] value8() {
        return getObserveruuid();
    }

    @Override
    public PeerconnectionsRecord value1(byte[] value) {
        setPeerconnectionuuid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value2(LocalDateTime value) {
        setJoined(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value3(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value4(LocalDateTime value) {
        setDetached(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value5(String value) {
        setBrowserid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value6(String value) {
        setTimezone(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value7(byte[] value) {
        setCalluuid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value8(byte[] value) {
        setObserveruuid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord values(byte[] value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, String value5, String value6, byte[] value7, byte[] value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PeerconnectionsRecord
     */
    public PeerconnectionsRecord() {
        super(Peerconnections.PEERCONNECTIONS);
    }

    /**
     * Create a detached, initialised PeerconnectionsRecord
     */
    public PeerconnectionsRecord(byte[] peerconnectionuuid, LocalDateTime joined, LocalDateTime updated, LocalDateTime detached, String browserid, String timezone, byte[] calluuid, byte[] observeruuid) {
        super(Peerconnections.PEERCONNECTIONS);

        set(0, peerconnectionuuid);
        set(1, joined);
        set(2, updated);
        set(3, detached);
        set(4, browserid);
        set(5, timezone);
        set(6, calluuid);
        set(7, observeruuid);
    }
}
