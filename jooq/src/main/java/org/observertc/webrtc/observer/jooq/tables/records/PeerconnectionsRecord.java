/*
 * This file is generated by jOOQ.
 */
package org.observertc.webrtc.observer.jooq.tables.records;


import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.observertc.webrtc.observer.jooq.tables.Peerconnections;


/**
 * A table to store information related to peer connections
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeerconnectionsRecord extends UpdatableRecordImpl<PeerconnectionsRecord> implements Record12<byte[], byte[], byte[], Long, Long, Long, String, String, String, String, String, String> {

    private static final long serialVersionUID = 712879367;

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.peerConnectionUUID</code>.
     */
    public PeerconnectionsRecord setPeerconnectionuuid(byte[] value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.peerConnectionUUID</code>.
     */
    @NotNull
    @Size(max = 16)
    public byte[] getPeerconnectionuuid() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.callUUID</code>.
     */
    public PeerconnectionsRecord setCalluuid(byte[] value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.callUUID</code>.
     */
    @Size(max = 16)
    public byte[] getCalluuid() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.serviceUUID</code>.
     */
    public PeerconnectionsRecord setServiceuuid(byte[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.serviceUUID</code>.
     */
    @Size(max = 16)
    public byte[] getServiceuuid() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.joined</code>.
     */
    public PeerconnectionsRecord setJoined(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.joined</code>.
     */
    public Long getJoined() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.updated</code>.
     */
    public PeerconnectionsRecord setUpdated(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.updated</code>.
     */
    public Long getUpdated() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.detached</code>.
     */
    public PeerconnectionsRecord setDetached(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.detached</code>.
     */
    public Long getDetached() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.bridgeID</code>.
     */
    public PeerconnectionsRecord setBridgeid(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.bridgeID</code>.
     */
    @Size(max = 255)
    public String getBridgeid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.browserID</code>.
     */
    public PeerconnectionsRecord setBrowserid(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.browserID</code>.
     */
    @Size(max = 255)
    public String getBrowserid() {
        return (String) get(7);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.providedUserID</code>.
     */
    public PeerconnectionsRecord setProvideduserid(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.providedUserID</code>.
     */
    @Size(max = 255)
    public String getProvideduserid() {
        return (String) get(8);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.providedCallID</code>.
     */
    public PeerconnectionsRecord setProvidedcallid(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.providedCallID</code>.
     */
    @Size(max = 255)
    public String getProvidedcallid() {
        return (String) get(9);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.timeZone</code>.
     */
    public PeerconnectionsRecord setTimezone(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.timeZone</code>.
     */
    @Size(max = 255)
    public String getTimezone() {
        return (String) get(10);
    }

    /**
     * Setter for <code>WebRTCObserver.PeerConnections.serviceName</code>.
     */
    public PeerconnectionsRecord setServicename(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>WebRTCObserver.PeerConnections.serviceName</code>.
     */
    @Size(max = 255)
    public String getServicename() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<byte[]> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<byte[], byte[], byte[], Long, Long, Long, String, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<byte[], byte[], byte[], Long, Long, Long, String, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<byte[]> field1() {
        return Peerconnections.PEERCONNECTIONS.PEERCONNECTIONUUID;
    }

    @Override
    public Field<byte[]> field2() {
        return Peerconnections.PEERCONNECTIONS.CALLUUID;
    }

    @Override
    public Field<byte[]> field3() {
        return Peerconnections.PEERCONNECTIONS.SERVICEUUID;
    }

    @Override
    public Field<Long> field4() {
        return Peerconnections.PEERCONNECTIONS.JOINED;
    }

    @Override
    public Field<Long> field5() {
        return Peerconnections.PEERCONNECTIONS.UPDATED;
    }

    @Override
    public Field<Long> field6() {
        return Peerconnections.PEERCONNECTIONS.DETACHED;
    }

    @Override
    public Field<String> field7() {
        return Peerconnections.PEERCONNECTIONS.BRIDGEID;
    }

    @Override
    public Field<String> field8() {
        return Peerconnections.PEERCONNECTIONS.BROWSERID;
    }

    @Override
    public Field<String> field9() {
        return Peerconnections.PEERCONNECTIONS.PROVIDEDUSERID;
    }

    @Override
    public Field<String> field10() {
        return Peerconnections.PEERCONNECTIONS.PROVIDEDCALLID;
    }

    @Override
    public Field<String> field11() {
        return Peerconnections.PEERCONNECTIONS.TIMEZONE;
    }

    @Override
    public Field<String> field12() {
        return Peerconnections.PEERCONNECTIONS.SERVICENAME;
    }

    @Override
    public byte[] component1() {
        return getPeerconnectionuuid();
    }

    @Override
    public byte[] component2() {
        return getCalluuid();
    }

    @Override
    public byte[] component3() {
        return getServiceuuid();
    }

    @Override
    public Long component4() {
        return getJoined();
    }

    @Override
    public Long component5() {
        return getUpdated();
    }

    @Override
    public Long component6() {
        return getDetached();
    }

    @Override
    public String component7() {
        return getBridgeid();
    }

    @Override
    public String component8() {
        return getBrowserid();
    }

    @Override
    public String component9() {
        return getProvideduserid();
    }

    @Override
    public String component10() {
        return getProvidedcallid();
    }

    @Override
    public String component11() {
        return getTimezone();
    }

    @Override
    public String component12() {
        return getServicename();
    }

    @Override
    public byte[] value1() {
        return getPeerconnectionuuid();
    }

    @Override
    public byte[] value2() {
        return getCalluuid();
    }

    @Override
    public byte[] value3() {
        return getServiceuuid();
    }

    @Override
    public Long value4() {
        return getJoined();
    }

    @Override
    public Long value5() {
        return getUpdated();
    }

    @Override
    public Long value6() {
        return getDetached();
    }

    @Override
    public String value7() {
        return getBridgeid();
    }

    @Override
    public String value8() {
        return getBrowserid();
    }

    @Override
    public String value9() {
        return getProvideduserid();
    }

    @Override
    public String value10() {
        return getProvidedcallid();
    }

    @Override
    public String value11() {
        return getTimezone();
    }

    @Override
    public String value12() {
        return getServicename();
    }

    @Override
    public PeerconnectionsRecord value1(byte[] value) {
        setPeerconnectionuuid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value2(byte[] value) {
        setCalluuid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value3(byte[] value) {
        setServiceuuid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value4(Long value) {
        setJoined(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value5(Long value) {
        setUpdated(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value6(Long value) {
        setDetached(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value7(String value) {
        setBridgeid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value8(String value) {
        setBrowserid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value9(String value) {
        setProvideduserid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value10(String value) {
        setProvidedcallid(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value11(String value) {
        setTimezone(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord value12(String value) {
        setServicename(value);
        return this;
    }

    @Override
    public PeerconnectionsRecord values(byte[] value1, byte[] value2, byte[] value3, Long value4, Long value5, Long value6, String value7, String value8, String value9, String value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PeerconnectionsRecord
     */
    public PeerconnectionsRecord() {
        super(Peerconnections.PEERCONNECTIONS);
    }

    /**
     * Create a detached, initialised PeerconnectionsRecord
     */
    public PeerconnectionsRecord(byte[] peerconnectionuuid, byte[] calluuid, byte[] serviceuuid, Long joined, Long updated, Long detached, String bridgeid, String browserid, String provideduserid, String providedcallid, String timezone, String servicename) {
        super(Peerconnections.PEERCONNECTIONS);

        set(0, peerconnectionuuid);
        set(1, calluuid);
        set(2, serviceuuid);
        set(3, joined);
        set(4, updated);
        set(5, detached);
        set(6, bridgeid);
        set(7, browserid);
        set(8, provideduserid);
        set(9, providedcallid);
        set(10, timezone);
        set(11, servicename);
    }
}
