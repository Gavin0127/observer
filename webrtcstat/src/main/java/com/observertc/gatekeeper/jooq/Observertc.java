/*
 * This file is generated by jOOQ.
 */
package com.observertc.gatekeeper.jooq;


import com.observertc.gatekeeper.jooq.tables.Observerorganisations;
import com.observertc.gatekeeper.jooq.tables.Observers;
import com.observertc.gatekeeper.jooq.tables.Organisations;
import com.observertc.gatekeeper.jooq.tables.Users;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Observertc extends SchemaImpl {

    private static final long serialVersionUID = 1606466868;

    /**
     * The reference instance of <code>ObserveRTC</code>
     */
    public static final Observertc OBSERVERTC = new Observertc();

    /**
     * An associative table to map Observers to Evaluators
     */
    public final Observerorganisations OBSERVERORGANISATIONS = Observerorganisations.OBSERVERORGANISATIONS;

    /**
     * Observers
     */
    public final Observers OBSERVERS = Observers.OBSERVERS;

    /**
     * Organizations
     */
    public final Organisations ORGANISATIONS = Organisations.ORGANISATIONS;

    /**
     * Users
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Observertc() {
        super("ObserveRTC", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Observerorganisations.OBSERVERORGANISATIONS,
            Observers.OBSERVERS,
            Organisations.ORGANISATIONS,
            Users.USERS);
    }
}
