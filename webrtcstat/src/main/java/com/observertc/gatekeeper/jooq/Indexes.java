/*
 * This file is generated by jOOQ.
 */
package com.observertc.gatekeeper.jooq;


import com.observertc.gatekeeper.jooq.tables.Observerorganisations;
import com.observertc.gatekeeper.jooq.tables.Users;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>ObserveRTC</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index OBSERVERORGANISATIONS_OBSERVER_ID = Indexes0.OBSERVERORGANISATIONS_OBSERVER_ID;
    public static final Index OBSERVERORGANISATIONS_ORGANISATION_ID = Indexes0.OBSERVERORGANISATIONS_ORGANISATION_ID;
    public static final Index USERS_USERS_USERNAME_KEY = Indexes0.USERS_USERS_USERNAME_KEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index OBSERVERORGANISATIONS_OBSERVER_ID = Internal.createIndex("observer_id", Observerorganisations.OBSERVERORGANISATIONS, new OrderField[] { Observerorganisations.OBSERVERORGANISATIONS.OBSERVER_ID }, false);
        public static Index OBSERVERORGANISATIONS_ORGANISATION_ID = Internal.createIndex("organisation_id", Observerorganisations.OBSERVERORGANISATIONS, new OrderField[] { Observerorganisations.OBSERVERORGANISATIONS.ORGANISATION_ID }, false);
        public static Index USERS_USERS_USERNAME_KEY = Internal.createIndex("users_username_key", Users.USERS, new OrderField[] { Users.USERS.USERNAME }, false);
    }
}
