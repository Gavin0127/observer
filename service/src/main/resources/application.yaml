micronaut:
  server:
    port: ${APPLICATION_SERVER_PORT:8088}
  application:
    name: webrtcstats_gatekeeper
    authentication:
      hashAlgorithm: ${AUTHENTICATION_HASH_ALGORITHM:`SHA-512`}
      stretching: ${AUTHENTICATION_STRETCHING:2}
      saltSize: ${AUTHENTICATION_SALT_SIZE:32}
  metrics:
    enabled: true
#    export:
#      elastic:
#        enabled: true
#        step: PT1M
---
administration:
  admin:
    username: ${OBSERVER_ADMIN_USERNAME:root}
    secret: ${OBSERVER_ADMIN_PASSWORD:password}
---
kafka:
  bootstrap:
    servers: ${KAFKA_HOSTS:`localhost:9092`}
---
kafkaTopics:
  createIfNotExists: True
  replicationFactorOnCreating: 1
  partitionNumberOnCreating: 1
  observeRTCCIceStatsSample: ${KAFKA_TOPICS_OBSERVERTC_ICE_STATS_SAMPLES:observeRTCCIceStatsSample}
  observeRTCMediaStreamStatsSamples: ${KAFKA_TOPICS_OBSERVERTC_MEDIA_STREAM_STATS_SAMPLES:observeRTCMediaStreamStatsSamples}
  observerSSRCPeerConnectionSamples: ${KAFKA_TOPICS_OBSERVER_SSRC_PEER_CONNECTION_SAMPLES:observerSSRCPeerConnectionSamples}
---
evaluations:
  mediaStreamSamples:
    reportPeriodInS: 30
  callIdentifier:
    process: ObserverSSRCBasedProcessor
    maxIdleInS: 30
---
reportsink:
  configFile: ${REPORTSINK_CONFIG_FILE_NAME:`/reportsink.yml`}
  profile: BigQueryProfile
---
hikari:
  username: ${HIKARI_USERNAME:root}
  password: ${HIKARI_PASSWORD:password}
  minIdleInMs: ${HIKARI_MIN_IDLE_IN_MS:100}
  timeout: ${HIKARI_TIMEOUT_IN_MS:1000}
  jdbcURL: ${HIKARI_JDBC:`jdbc:mysql://localhost:3306/ObserveRTC`}
  jdbcDriver: ${JDBC_DRIVER:`com.mysql.cj.jdbc.Driver`}
  maxPoolSize: ${HIKARI_MAX_POOL_SIZE:100}
  poolname: ${HIKARI_POOL_NAME:gatekeeper}
---
jooq:
  dialect: ${JOOQ_DIALECT:MySQL}
